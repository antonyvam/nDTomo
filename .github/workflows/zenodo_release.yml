name: Release to Zenodo

on:
  release:
    types:
      - published

jobs:
  upload-to-zenodo:
    name: Publish Release on Zenodo
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Compress the release files if needed
      - name: Prepare Release Files
        run: |
          zip -r release_files.zip .

      # Step 3: Create a new version on Zenodo and update metadata
      - name: Create new Zenodo version
        id: zenodo-create
        env:
          ZENODO_TOKEN: ${{ secrets.ZENODO_API_TOKEN }}
          ZENODO_CONCEPT_ID: 6344269
        run: |
          # Create a new version on Zenodo
          RESPONSE=$(curl -s -H "Authorization: Bearer $ZENODO_TOKEN" \
            -X POST "https://zenodo.org/api/deposit/depositions/$ZENODO_CONCEPT_ID/actions/newversion")

          # Extract new deposition ID
          NEW_DEPOSITION_ID=$(echo "$RESPONSE" | jq -r '.links.latest_draft' | sed 's/.*\///')
          if [ -z "$NEW_DEPOSITION_ID" ] || [ "$NEW_DEPOSITION_ID" = "null" ]; then
            echo "Error: Failed to create a new Zenodo version. Response: $RESPONSE"
            exit 1
          fi

          # Update metadata for the new deposition
          curl -H "Authorization: Bearer $ZENODO_TOKEN" \
            -H "Content-Type: application/json" \
            -X PUT "https://zenodo.org/api/deposit/depositions/$NEW_DEPOSITION_ID" \
            -d '{
              "metadata": {
                "title": "New Release of nDTomo",
                "description": "This release contains the latest updates and improvements for the nDTomo software.",
                "creators": [
                  {
                    "name": "Vamvakeros, Antonis",
                    "affiliation": "Finden Ltd / Imperial College London"
                  }
                ],
                "version": "'${{ github.event.release.tag_name }}'"
              }
            }'

          echo "New deposition ID: $NEW_DEPOSITION_ID"
          echo "deposition_id=$NEW_DEPOSITION_ID" >> $GITHUB_ENV

      # Step 4: Upload the release files to Zenodo
      - name: Upload Files to Zenodo
        env:
          ZENODO_TOKEN: ${{ secrets.ZENODO_API_TOKEN }}
          NEW_DEPOSITION_ID: ${{ env.deposition_id }}
        run: |
          curl -H "Authorization: Bearer $ZENODO_TOKEN" \
            -F "file=@release_files.zip" \
            "https://zenodo.org/api/deposit/depositions/$NEW_DEPOSITION_ID/files"

      # Step 5: Publish the new deposition
      - name: Publish Zenodo Release
        env:
          ZENODO_TOKEN: ${{ secrets.ZENODO_API_TOKEN }}
          NEW_DEPOSITION_ID: ${{ env.deposition_id }}
        run: |
          RESPONSE=$(curl -s -H "Authorization: Bearer $ZENODO_TOKEN" \
            -X POST "https://zenodo.org/api/deposit/depositions/$NEW_DEPOSITION_ID/actions/publish")
          if [[ $(echo "$RESPONSE" | jq -r '.state') != "done" ]]; then
            echo "Error: Failed to publish the deposition. Response: $RESPONSE"
            exit 1
          fi
          echo "Zenodo release successfully published."
