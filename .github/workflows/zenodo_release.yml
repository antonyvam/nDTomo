name: Release to Zenodo

on:
  release:
    types:
      - published

jobs:
  upload-to-zenodo:
    name: Publish Release on Zenodo
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Compress Release Files
        run: |
          zip -r release_files.zip .

      - name: Split Large Files if Needed
        run: |
          split -b 100M release_files.zip release_part_

      - name: Create New Zenodo Version
        id: zenodo-create
        env:
          ZENODO_TOKEN: ${{ secrets.ZENODO_API_TOKEN }}
          ZENODO_CONCEPT_ID: 6344269
        run: |
          RESPONSE=$(curl -s -H "Authorization: Bearer $ZENODO_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
                  "metadata": {
                    "title": "New Release of nDTomo",
                    "publication_date": "2025-01-26",
                    "description": "This release contains the latest updates and improvements for the nDTomo software.",
                    "creators": [{"name": "Vamvakeros, Antonis", "affiliation": "Finden Ltd / Imperial College London"}],
                    "license": "cc-by-4.0",
                    "resource_type": {"type": "software"}
                  }
                }' \
            -X POST "https://zenodo.org/api/deposit/depositions/$ZENODO_CONCEPT_ID/actions/newversion")

          NEW_DEPOSITION_ID=$(echo "$RESPONSE" | jq -r '.links.latest_draft' | sed 's/.*\///')
          echo "deposition_id=$NEW_DEPOSITION_ID" >> $GITHUB_ENV

      - name: Upload Files to Zenodo
        env:
          ZENODO_TOKEN: ${{ secrets.ZENODO_API_TOKEN }}
          NEW_DEPOSITION_ID: ${{ env.deposition_id }}
        run: |
          for part in release_part_*; do
            curl -H "Authorization: Bearer $ZENODO_TOKEN" \
              -F "file=@$part" \
              "https://zenodo.org/api/deposit/depositions/$NEW_DEPOSITION_ID/files"
          done

      - name: Publish Zenodo Release
        env:
          ZENODO_TOKEN: ${{ secrets.ZENODO_API_TOKEN }}
          NEW_DEPOSITION_ID: ${{ env.deposition_id }}
        run: |
          RESPONSE=$(curl -s -H "Authorization: Bearer $ZENODO_TOKEN" \
            -X POST "https://zenodo.org/api/deposit/depositions/$NEW_DEPOSITION_ID/actions/publish")
          if [[ $(echo "$RESPONSE" | jq -r '.status') != "published" ]]; then
            echo "Error: Failed to publish the deposition. Response: $RESPONSE"
            exit 1
          fi
          echo "Zenodo release successfully published."
