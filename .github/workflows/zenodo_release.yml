name: Release to Zenodo

on:
  release:
    types:
      - published

jobs:
  upload-to-zenodo:
    name: Publish Release on Zenodo
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Compress the release files
      - name: Prepare Release Files
        run: |
          zip -r release_files.zip .

      # Step 3: Extract Metadata from GitHub Release
      - name: Extract Metadata
        id: metadata
        run: |
          echo "RELEASE_TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          printf "RELEASE_BODY=%s" "${{ github.event.release.body }}" | tr '\n' ' ' >> $GITHUB_ENV

      # Step 4: Create a new Zenodo version
      - name: Create new Zenodo version
        id: zenodo-create
        env:
          ZENODO_TOKEN: ${{ secrets.ZENODO_API_TOKEN }}
          ZENODO_CONCEPT_ID: 6344270
        run: |
          RESPONSE=$(curl -s -H "Authorization: Bearer $ZENODO_TOKEN" \
            -X POST "https://zenodo.org/api/deposit/depositions/$ZENODO_CONCEPT_ID/actions/newversion")

          NEW_DEPOSITION_ID=$(echo "$RESPONSE" | jq -r '.links.latest_draft' | sed 's/.*\///')

          if [ -z "$NEW_DEPOSITION_ID" ] || [ "$NEW_DEPOSITION_ID" = "null" ]; then
            echo "Error: Failed to create a new Zenodo version. Response: $RESPONSE"
            exit 1
          fi

          echo "New deposition ID: $NEW_DEPOSITION_ID"
          echo "deposition_id=$NEW_DEPOSITION_ID" >> $GITHUB_ENV

      # Step 5: Update Zenodo Metadata
      - name: Update Zenodo Metadata
        env:
          ZENODO_TOKEN: ${{ secrets.ZENODO_API_TOKEN }}
          NEW_DEPOSITION_ID: ${{ env.deposition_id }}
          RELEASE_TAG: ${{ env.RELEASE_TAG }}
          RELEASE_BODY: ${{ env.RELEASE_BODY }}
        run: |
          RESPONSE=$(curl -s -H "Authorization: Bearer $ZENODO_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$(jq -n \
              --arg title "nDTomo Release - ${RELEASE_TAG}" \
              --arg description "${RELEASE_BODY}" \
              --arg date "$(date +%Y-%m-%d)" \
              --arg license "gpl-3.0-or-later" \
              '{
                metadata: {
                  title: $title,
                  description: $description,
                  upload_type: "software",
                  publication_date: $date,
                  creators: [
                    {
                      name: "Vamvakeros, Antonis",
                      affiliation: "Finden Ltd / Imperial College London",
                      orcid: "0000-0002-4745-0602"
                    }
                  ],
                  access_right: "open",
                  license: $license,
                  resource_type: {"type": "software"}
                }
              }')" \
            -X PUT "https://zenodo.org/api/deposit/depositions/$NEW_DEPOSITION_ID")
          
          if [[ $(echo "$RESPONSE" | jq -r '.message') == "A validation error occurred." ]]; then
            echo "Error: Metadata update failed. Response: $RESPONSE"
            exit 1
          fi

      # Step 6: Upload Files to Zenodo
      - name: Upload Files to Zenodo
        env:
          ZENODO_TOKEN: ${{ secrets.ZENODO_API_TOKEN }}
          NEW_DEPOSITION_ID: ${{ env.deposition_id }}
        run: |
          curl -s -H "Authorization: Bearer $ZENODO_TOKEN" \
            -F "file=@release_files.zip" \
            "https://zenodo.org/api/deposit/depositions/$NEW_DEPOSITION_ID/files"

      # Step 7: Publish the new deposition
      - name: Publish Zenodo Release
        env:
          ZENODO_TOKEN: ${{ secrets.ZENODO_API_TOKEN }}
          NEW_DEPOSITION_ID: ${{ env.deposition_id }}
        run: |
          RESPONSE=$(curl -s -H "Authorization: Bearer $ZENODO_TOKEN" \
            -X POST "https://zenodo.org/api/deposit/depositions/$NEW_DEPOSITION_ID/actions/publish")

          if [[ $(echo "$RESPONSE" | jq -r '.status') != "published" ]]; then
            echo "Error: Failed to publish the deposition. Response: $RESPONSE"
            exit 1
          fi

          echo "Zenodo release successfully published."
